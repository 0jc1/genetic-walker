{"mappings":"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","sources":["src/humanoid.js"],"sourcesContent":["\nclass Humanoid {\n    constructor(world, scene) {\n        this.world = world;\n        this.scene = scene;\n\n        this.parts = {};\n\n        this.createParts();\n    }\n\n    // Function to create a box in both Three.js and Cannon.js\n    createBox(width, height, depth, position, color) {\n        // Three.js\n        const geometry = new THREE.BoxGeometry(width, height, depth);\n        const material = new THREE.MeshBasicMaterial({ color: color });\n        const mesh = new THREE.Mesh(geometry, material);\n        this.scene.add(mesh);\n\n        // Cannon.js\n        const shape = new CANNON.Box(new CANNON.Vec3(width / 2, height / 2, depth / 2));\n        const body = new CANNON.Body({ mass: 1 });\n        body.addShape(shape);\n        body.position.set(position.x, position.y, position.z);\n        this.world.addBody(body);\n\n        return { mesh, body };\n    }\n\n    addHingeConstraint(bodyA, bodyB, pivotA, pivotB, axisA, axisB) {\n        const constraint = new CANNON.HingeConstraint(bodyA, bodyB, {\n            pivotA: pivotA,\n            pivotB: pivotB,\n            axisA: axisA,\n            axisB: axisB\n        });\n        this.world.addConstraint(constraint);\n        return constraint;\n    }\n\n    createParts() {\n        // Create humanoid parts\n        const offset = 1;\n        this.head = this.createBox(1, 1, 1, new THREE.Vector3(0, 6 + offset, 0), 0xff0000);\n        this.torso = this.createBox(2, 3, 1, new THREE.Vector3(0, 3 + offset, 0), 0x00ff00);\n        this.leftArm = this.createBox(1, 3, 1, new THREE.Vector3(-1.5, 3 + offset, 0), 0x0000ff);\n        this.rightArm = this.createBox(1, 3, 1, new THREE.Vector3(1.5, 3 + offset, 0), 0x0000ff);\n        this.leftLeg = this.createBox(1, 3, 1, new THREE.Vector3(-0.5, 0 + offset, 0), 0xffff00);\n        this.rightLeg = this.createBox(1, 3, 1, new THREE.Vector3(0.5, 0 + offset, 0), 0xffff00);\n\n        // Connect parts with hinge constraints\n        this.headToTorso = this.addHingeConstraint(head.body, torso.body, new CANNON.Vec3(0, -0.5, 0), new CANNON.Vec3(0, 1.5, 0), new CANNON.Vec3(1, 0, 0), new CANNON.Vec3(1, 0, 0));\n\n        this.leftArmToTorso = this.addHingeConstraint(leftArm.body, torso.body, new CANNON.Vec3(0.5, 1.5, 0), new CANNON.Vec3(-1, 1.5, 0), new CANNON.Vec3(0, 1, 0), new CANNON.Vec3(0, 1, 0));\n        this.rightArmToTorso = this.addHingeConstraint(rightArm.body, torso.body, new CANNON.Vec3(-0.5, 1.5, 0), new CANNON.Vec3(1, 1.5, 0), new CANNON.Vec3(0, 1, 0), new CANNON.Vec3(0, 1, 0));\n\n        this.leftLegToTorso = this.addHingeConstraint(leftLeg.body, torso.body, new CANNON.Vec3(0.5, 1.5, 0), new CANNON.Vec3(-0.5, -1.5, 0), new CANNON.Vec3(1, 0, 0), new CANNON.Vec3(1, 0, 0));\n        this.rightLegToTorso = this.addHingeConstraint(rightLeg.body, torso.body, new CANNON.Vec3(-0.5, 1.5, 0), new CANNON.Vec3(0.5, -1.5, 0), new CANNON.Vec3(1, 0, 0), new CANNON.Vec3(1, 0, 0));\n    }\n\n    update() {\n        // Update positions and rotations\n        this.head.mesh.position.copy(this.head.body.position);\n        this.head.mesh.quaternion.copy(this.head.body.quaternion);\n\n        this.torso.mesh.position.copy(this.torso.body.position);\n        this.torso.mesh.quaternion.copy(this.torso.body.quaternion);\n\n        this.leftArm.mesh.position.copy(this.leftArm.body.position);\n        this.leftArm.mesh.quaternion.copy(this.leftArm.body.quaternion);\n\n        this.rightArm.mesh.position.copy(this.rightArm.body.position);\n        this.rightArm.mesh.quaternion.copy(this.rightArm.body.quaternion);\n\n        this.leftLeg.mesh.position.copy(this.leftLeg.body.position);\n        this.leftLeg.mesh.quaternion.copy(this.leftLeg.body.quaternion);\n\n        this.rightLeg.mesh.position.copy(this.rightLeg.body.position);\n        this.rightLeg.mesh.quaternion.copy(this.rightLeg.body.quaternion);\n    }\n\n}"],"names":[],"version":3,"file":"index.94935b54.js.map","sourceRoot":"/__parcel_source_root/"}